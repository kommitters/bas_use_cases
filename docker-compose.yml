# version: '3'

volumes:
  pgdata:
    driver: local
  cronjobs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: .

networks:
  bas_network:
    driver: bridge
    name: bas_network

x-common:
  &default-build
  build: 
    context: .
    args:
      BUNDLE_GITHUB__COM: "${REPO_GITHUB_TOKEN}:x-oauth-basic"

services:
  bas_db:
    image: postgres:13-alpine
    container_name: bas_db
    restart: unless-stopped
    networks:
      - bas_network
    ports:
      - 8001:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    env_file:
      - .env
    deploy:
      resources:
        limits:
          memory: 150M

  bas_cronjobs:
    container_name: bas_cronjobs
    restart: always
    <<: *default-build
    volumes:
      - cronjobs:/app
    depends_on:
      - bas_db
    networks:
      - bas_network
    command: ["bash", "/app/scripts/update_container.sh"]
    deploy:
      resources:
        limits:
          memory: 500M

  discord-bot:
    container_name: discord_bot
    restart: always
    <<: *default-build
    volumes:
      - .env:/app/.env
      - ./Gemfile:/app/Gemfile
      - ./Gemfile.lock:/app/Gemfile.lock
      - ./discord_bot:/app
    depends_on:
      - bas_db
      - bas_cronjobs
    networks:
      - bas_network
    command: ["bash", "/app/scripts/update_container.sh"]
    deploy:
      resources:
        limits:
          memory: 100M

  telegram-bot:
    container_name: telegram_bot
    restart: always
    <<: *default-build
    volumes:
      - .env:/app/.env
      - ./telegram_app:/app
      - ./Gemfile:/app/Gemfile
      - ./Gemfile.lock:/app/Gemfile.lock
    depends_on:
      - bas_db
      - bas_cronjobs
    networks:
      - bas_network
    command: ["bash", "/app/scripts/update_container.sh"]
    deploy:
      resources:
        limits:
          memory: 100M
