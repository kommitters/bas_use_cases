name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  tests:
    env:
      BUNDLE_GITHUB__COM: "${{ secrets.REPO_GITHUB_TOKEN }}:x-oauth-basic"
    name: Tests
    runs-on: ubuntu-latest

    steps:
      - name: Get this repository
        uses: actions/checkout@v3

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3.3

      - name: Install Dependencies
        run: |
          gem install bundler
          gem install rubocop
          gem install rspec
          bundle install

      - name: Run linter
        run: rubocop

      - name: Run tests
        run: bundle exec rspec

  deploy-staging:
    if: github.ref == 'refs/heads/main' # Only run deploy on pushes to main
    needs: tests # Only run deploy if test succeeds
    name: Deploy Staging
    runs-on: ubuntu-latest

    steps:
      - name: Get this repository
        uses: actions/checkout@v3

      - name: Install rsync
        run: sudo apt-get install -y rsync

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3.3

      - name: Create env file
        run: touch .env

      - name: Add Secrets into yml file
        run: |
          base64 -d ${{secrets.STG_SECRETS_B64}} > .env

      - name: compress project
        run: zip -r bas_scripts.zip .

      - name: Transfer files to Droplet using rsync
        uses: burnett01/rsync-deployments@5.0
        with:
          switches: -avzr --delete
          path: bas_scripts.zip
          remote_path: /root/app
          remote_host: ${{ secrets.DO_DROPLET_IP_STG }}
          remote_user: root
          remote_key: ${{ secrets.DO_SSH_KEY_STG }}

      - name: Deploy to DigitalOcean Droplet
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DO_DROPLET_IP_STG }}
          username: root
          key: ${{ secrets.DO_SSH_KEY_STG }}
          script: |
            docker stop $(docker ps -q)
            docker-compose -f /root/bas_db/docker-compose.yml up -d
            cd /root/app
            unzip -o bas_scripts.zip
            docker-compose stop
            docker-compose down
            docker-compose up -d bas_cronjobs
