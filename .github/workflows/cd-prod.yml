name: Deploy to Prod

on:
  release:
    types: [created]

jobs:
  deploy-prod:
    name: Deploy Prod
    runs-on: ubuntu-latest

    steps:
    - name: Get this repository
      uses: actions/checkout@v3

    - name: Install rsync
      run: sudo apt-get install -y rsync

    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.3.3

    - name: Create env file
      run: touch .env

    - name: Add Secrets into yml file
      run: |
        echo -e 'DB_HOST=${{secrets.DB_HOST}}' >> .env
        echo -e 'DB_PORT=${{secrets.DB_PORT}}' >> .env
        echo -e 'POSTGRES_DB=${{secrets.POSTGRES_DB}}' >> .env
        echo -e 'POSTGRES_USER=${{secrets.POSTGRES_USER}}' >> .env
        echo -e 'POSTGRES_PASSWORD=${{secrets.POSTGRES_PASSWORD}}' >> .env
        echo -e 'DISCORD_BOT_NAME=${{secrets.DISCORD_BOT_NAME}}' >> .env
        echo -e 'NOTION_SECRET=${{secrets.NOTION_SECRET}}' >> .env
        echo -e 'OSS_NOTION_DATABASE_ID=${{secrets.OSS_NOTION_DATABASE_ID}}' >> .env
        echo -e 'BIRTHDAY_NOTION_DATABASE_ID=${{secrets.BIRTHDAY_NOTION_DATABASE_ID}}' >> .env
        echo -e 'BIRTHDAY_DISCORD_WEBHOOK=${{secrets.BIRTHDAY_DISCORD_WEBHOOK}}' >> .env
        echo -e 'NEXT_WEEK_BIRTHDAY_DISCORD_WEBHOOK=${{secrets.NEXT_WEEK_BIRTHDAY_DISCORD_WEBHOOK}}' >> .env
        echo -e 'OPENAI_SECRET=${{secrets.OPENAI_SECRET}}' >> .env
        echo -e 'PTO_NOTION_DATABASE_ID=${{secrets.PTO_NOTION_DATABASE_ID}}' >> .env
        echo -e 'PTO_OPENAI_ASSISTANT=${{secrets.PTO_OPENAI_ASSISTANT}}' >> .env
        echo -e 'PTO_DISCORD_WEBHOOK=${{secrets.PTO_DISCORD_WEBHOOK}}' >> .env
        echo -e 'NEXT_WEEK_PTO_OPENAI_ASSISTANT=${{secrets.NEXT_WEEK_PTO_OPENAI_ASSISTANT}}' >> .env
        echo -e 'WIP_COUNT_NOTION_DATABASE_ID=${{secrets.WIP_COUNT_NOTION_DATABASE_ID}}' >> .env
        echo -e 'WIP_LIMIT_NOTION_DATABASE_ID=${{secrets.WIP_LIMIT_NOTION_DATABASE_ID}}' >> .env
        echo -e 'WIP_LIMIT_DISCORD_WEBHOOK=${{secrets.WIP_LIMIT_DISCORD_WEBHOOK}}' >> .env
        echo -e 'SUPPORT_EMAIL_ACCOUNT=${{secrets.SUPPORT_EMAIL_ACCOUNT}}' >> .env
        echo -e 'SUPPORT_EMAIL_REFRESH_TOKEN=${{secrets.SUPPORT_EMAIL_REFRESH_TOKEN}}' >> .env
        echo -e 'SUPPORT_EMAIL_CLIENT_ID=${{secrets.SUPPORT_EMAIL_CLIENT_ID}}' >> .env
        echo -e 'SUPPORT_EMAIL_CLIENT_SECRET=${{secrets.SUPPORT_EMAIL_CLIENT_SECRET}}' >> .env
        echo -e 'SUPPORT_EMAIL_INBOX=${{secrets.SUPPORT_EMAIL_INBOX}}' >> .env
        echo -e 'SUPPORT_EMAIL_RECEPTOR=${{secrets.SUPPORT_EMAIL_RECEPTOR}}' >> .env
        echo -e 'SUPPORT_EMAIL_DISCORD_WEBHOOK=${{secrets.SUPPORT_EMAIL_DISCORD_WEBHOOK}}' >> .env
        echo -e 'REVIEW_IMAGE_OPENAI_ASSISTANT=${{secrets.REVIEW_IMAGE_OPENAI_ASSISTANT}}'>> .env
        echo -e 'DIGITAL_OCEAN_SECRET=${{secrets.DIGITAL_OCEAN_SECRET}}' >> .env
        echo -e 'DIGITAL_OCEAN_THRESHOLD=${{secrets.DIGITAL_OCEAN_THRESHOLD}}' >> .env
        echo -e 'DIGITAL_OCEAN_DISCORD_WEBHOOK=${{secrets.DIGITAL_OCEAN_DISCORD_WEBHOOK}}' >> .env
        echo -e 'OSPO_MAINTENANCE_SECRET=${{secrets.OSPO_MAINTENANCE_SECRET}}' >> .env
        echo -e 'OSPO_MAINTENANCE_APP_ID=${{secrets.OSPO_MAINTENANCE_APP_ID}}' >> .env
        echo -e 'OSPO_MAINTENANCE_NOTION_DATABASE_ID=${{secrets.OSPO_MAINTENANCE_NOTION_DATABASE_ID}}' >> .env
        echo -e 'OSPO_MAINTENANCE_NOTION_USERS_DATABASE_ID=${{secrets.OSPO_MAINTENANCE_NOTION_USERS_DATABASE_ID}}' >> .env
        echo -e 'WHATSAPP_WEBHOOK_TOKEN=${{secrets.WHATSAPP_WEBHOOK_TOKEN}}' >> .env
        echo -e 'WHATSAPP_TOKEN=${{secrets.WHATSAPP_TOKEN}}' >> .env
        echo -e 'R2_ACCESS_KEY_ID=${{secrets.R2_ACCESS_KEY_ID}}' >> .env
        echo -e 'R2_SECRET_ACCESS_KEY=${{secrets.R2_SECRET_ACCESS_KEY}}' >> .env
        echo -e 'R2_ENDPOINT=${{secrets.R2_ENDPOINT}}' >> .env
        echo -e 'R2_REGION=${{secrets.R2_REGION}}' >> .env
        echo -e 'R2_BUCKET_NAME=${{secrets.R2_BUCKET_NAME}}' >> .env
        echo -e 'BACKUPS_LIMIT=${{secrets.BACKUPS_LIMIT}}' >> .env
        echo -e 'DISCORD_BOT_TOKEN=${{secrets.DISCORD_BOT_TOKEN}}' >> .env
        echo -e 'WORK_LOGS_URL=${{secrets.WORK_LOGS_URL}}' >> .env
        echo -e 'WORK_LOGS_API_SECRET=${{secrets.WORK_LOGS_API_SECRET}}' >> .env
        echo -e 'ADMIN_DM_ID=${{secrets.ADMIN_DM_ID}}' >> .env
        echo -e 'OPS_DM_ID=${{secrets.OPS_DM_ID}}' >> .env
        echo -e 'ENGINEERING_DM_ID=${{secrets.ENGINEERING_DM_ID}}' >> .env
        echo -e 'BIZDEV_DM_ID=${{secrets.BIZDEV_DM_ID}}' >> .env
        echo -e 'APOLLO_TOKEN=${{secrets.APOLLO_TOKEN}}' >> .env
        echo -e 'API_SECURITY_SCORECARDS_URL=${{secrets.API_SECURITY_SCORECARDS_URL}}' >> .env
        echo -e 'GOOGLE_CHAT_WEBHOOK_PTO=${{secrets.GOOGLE_CHAT_WEBHOOK_PTO}}' >> .env
        echo -e 'GOOGLE_CHAT_WEBHOOK_BIRTHDAY=${{secrets.GOOGLE_CHAT_WEBHOOK_BIRTHDAY}}' >> .env
        
    - name: compress project
      run: zip -r bas_scripts.zip .

    - name: Transfer files to Droplet using rsync
      uses: burnett01/rsync-deployments@5.0
      with:
        switches: -avzr --delete
        path: bas_scripts.zip
        remote_path: /root/app
        remote_host: ${{ secrets.DO_DROPLET_IP }}
        remote_user: root
        remote_key: ${{ secrets.DO_SSH_KEY }}

    - name: Deploy to DigitalOcean Droplet
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.DO_DROPLET_IP }}
        username: root
        key: ${{ secrets.DO_SSH_KEY }}
        script: |
          cd /root/app
          unzip -o bas_scripts.zip
          docker-compose stop
          docker-compose down
          docker-compose up -d bas_cronjobs
