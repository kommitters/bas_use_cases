name: Deploy to Prod

on:
  release:
    types: [created]

jobs:
  deploy-prod:
    name: Deploy Prod
    runs-on: ubuntu-latest

    steps:
    - name: Get this repository
      uses: actions/checkout@v3

    - name: Install rsync
      run: sudo apt-get install -y rsync

    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.3.3

    - name: Install Ruby Dependencies
      run: |
        gem install bundler
        bundle config set path vendor/bundle
        bundle install

    - name: Create env file
      run: touch .env

    - name: Add Secrets into yml file
      run: |
        echo -e 'DB_HOST='${DB_HOST}>> .env
        echo -e 'DB_PORT='${DB_PORT}>> .env
        echo -e 'POSTGRES_DB='${POSTGRES_DB}>> .env
        echo -e 'POSTGRES_USER='${POSTGRES_USER}>> .env
        echo -e 'POSTGRES_PASSWORD='${POSTGRES_PASSWORD}>> .env
        echo -e 'DISCORD_BOT_NAME='${DISCORD_BOT_NAME}>> .env
        echo -e 'NOTION_SECRET='${NOTION_SECRET}>> .env
        echo -e 'BIRTHDAY_TABLE='${BIRTHDAY_TABLE}>> .env
        echo -e 'BIRTHDAY_NOTION_DATABASE_ID='${BIRTHDAY_NOTION_DATABASE_ID}>> .env
        echo -e 'BIRTHDAY_DISCORD_WEBHOOK='${BIRTHDAY_DISCORD_WEBHOOK}>> .env
        echo -e 'NEXT_WEEK_BIRTHDAY_DISCORD_WEBHOOK='${NEXT_WEEK_BIRTHDAY_DISCORD_WEBHOOK}>> .env
        echo -e 'OPENAI_SECRET='${OPENAI_SECRET}>> .env
        echo -e 'PTO_TABLE='${PTO_TABLE}>> .env
        echo -e 'PTO_NOTION_DATABASE_ID='${PTO_NOTION_DATABASE_ID}>> .env
        echo -e 'PTO_OPENAI_ASSISTANT='${PTO_OPENAI_ASSISTANT}>> .env
        echo -e 'PTO_DISCORD_WEBHOOK='${PTO_DISCORD_WEBHOOK}>> .env
        echo -e 'NEXT_WEEK_PTO_OPENAI_ASSISTANT='${NEXT_WEEK_PTO_OPENAI_ASSISTANT}>> .env
        echo -e 'NEXT_WEEK_PTO_DISCORD_WEBHOOK='${NEXT_WEEK_PTO_DISCORD_WEBHOOK}>> .env
        echo -e 'WIP_TABLE='${WIP_TABLE}>> .env
        echo -e 'WIP_COUNT_NOTION_DATABASE_ID='${WIP_COUNT_NOTION_DATABASE_ID}>> .env
        echo -e 'WIP_LIMIT_NOTION_DATABASE_ID='${WIP_LIMIT_NOTION_DATABASE_ID}>> .env
        echo -e 'WIP_LIMIT_DISCORD_WEBHOOK='${WIP_LIMIT_DISCORD_WEBHOOK}>> .env
        echo -e 'SUPPORT_EMAIL_TABLE='${SUPPORT_EMAIL_TABLE}>> .env
        echo -e 'SUPPORT_EMAIL_ACCOUNT='${SUPPORT_EMAIL_ACCOUNT}>> .env
        echo -e 'SUPPORT_EMAIL_REFRESH_TOKEN='${SUPPORT_EMAIL_REFRESH_TOKEN}>> .env
        echo -e 'SUPPORT_EMAIL_CLIENT_ID='${SUPPORT_EMAIL_CLIENT_ID}>> .env
        echo -e 'SUPPORT_EMAIL_CLIENT_SECRET='${SUPPORT_EMAIL_CLIENT_SECRET}>> .env
        echo -e 'SUPPORT_EMAIL_INBOX='${SUPPORT_EMAIL_INBOX}>> .env
        echo -e 'SUPPORT_EMAIL_RECEPTOR='${SUPPORT_EMAIL_RECEPTOR}>> .env
        echo -e 'SUPPORT_EMAIL_DISCORD_WEBHOOK='${SUPPORT_EMAIL_DISCORD_WEBHOOK}>> .env
        echo -e 'REVIEW_NOTION_DATABASE_ID='${REVIEW_NOTION_DATABASE_ID}>> .env
        echo -e 'REVIEW_IMAGES_TABLE='${REVIEW_IMAGES_TABLE}>> .env
        echo -e 'REVIEW_IMAGE_OPENAI_ASSISTANT='${REVIEW_IMAGE_OPENAI_ASSISTANT}>> .env
        echo -e 'REVIEW_TEXT_TABLE='${REVIEW_TEXT_TABLE}>> .env
        echo -e 'REVIEW_TEXT_OPENAI_ASSISTANT='${REVIEW_TEXT_OPENAI_ASSISTANT}>> .env


      env:
        # DB CONNECTION
        DB_HOST: ${{secrets.DB_HOST}}
        DB_PORT: ${{secrets.DB_PORT}}
        POSTGRES_DB: ${{secrets.POSTGRES_DB}}
        POSTGRES_USER: ${{secrets.POSTGRES_USER}}
        POSTGRES_PASSWORD: ${{secrets.POSTGRES_PASSWORD}}

        # DISCORD
        DISCORD_BOT_NAME: ${{secrets.DISCORD_BOT_NAME}}

        # NOTION
        NOTION_SECRET: ${{secrets.NOTION_SECRET}}

        # BIRTHDAY NOTIFICATION
        BIRTHDAY_TABLE: ${{secrets.BIRTHDAY_TABLE}}
        BIRTHDAY_NOTION_DATABASE_ID: ${{secrets.BIRTHDAY_NOTION_DATABASE_ID}}

        ## TODAY BIRTHDAY
        BIRTHDAY_DISCORD_WEBHOOK: ${{secrets.BIRTHDAY_DISCORD_WEBHOOK}}

        ## NEXT WEEK BIRTHDAY
        NEXT_WEEK_BIRTHDAY_DISCORD_WEBHOOK: ${{secrets.NEXT_WEEK_BIRTHDAY_DISCORD_WEBHOOK}}

        # PTO NOTIFICATION
        OPENAI_SECRET: ${{secrets.OPENAI_SECRET}}
        PTO_TABLE: ${{secrets.PTO_TABLE}}
        PTO_NOTION_DATABASE_ID: ${{secrets.PTO_NOTION_DATABASE_ID}}

        ## TODAY PTO
        PTO_OPENAI_ASSISTANT: ${{secrets.PTO_OPENAI_ASSISTANT}}
        PTO_DISCORD_WEBHOOK: ${{secrets.PTO_DISCORD_WEBHOOK}}

        ## NEXT WEEK PTOS
        NEXT_WEEK_PTO_OPENAI_ASSISTANT: ${{secrets.NEXT_WEEK_PTO_OPENAI_ASSISTANT}}
        NEXT_WEEK_PTO_DISCORD_WEBHOOK: ${{secrets.NEXT_WEEK_PTO_DISCORD_WEBHOOK}}

        # WIP LIMIT NOTIFICATION
        WIP_TABLE: ${{secrets.WIP_TABLE}}
        WIP_COUNT_NOTION_DATABASE_ID: ${{secrets.WIP_COUNT_NOTION_DATABASE_ID}}
        WIP_LIMIT_NOTION_DATABASE_ID: ${{secrets.WIP_LIMIT_NOTION_DATABASE_ID}}
        WIP_LIMIT_DISCORD_WEBHOOK: ${{secrets.WIP_LIMIT_DISCORD_WEBHOOK}}

        # SUPPORT EMAIL NOTIFICATION
        SUPPORT_EMAIL_TABLE: ${{secrets.SUPPORT_EMAIL_TABLE}}
        SUPPORT_EMAIL_ACCOUNT: ${{secrets.SUPPORT_EMAIL_ACCOUNT}}
        SUPPORT_EMAIL_REFRESH_TOKEN: ${{secrets.SUPPORT_EMAIL_REFRESH_TOKEN}}
        SUPPORT_EMAIL_CLIENT_ID: ${{secrets.SUPPORT_EMAIL_CLIENT_ID}}
        SUPPORT_EMAIL_CLIENT_SECRET: ${{secrets.SUPPORT_EMAIL_CLIENT_SECRET}}
        SUPPORT_EMAIL_INBOX: ${{secrets.SUPPORT_EMAIL_INBOX}}
        SUPPORT_EMAIL_RECEPTOR: ${{secrets.SUPPORT_EMAIL_RECEPTOR}}
        SUPPORT_EMAIL_DISCORD_WEBHOOK: ${{secrets.SUPPORT_EMAIL_DISCORD_WEBHOOK}}

        # REVIEW MEDIA
        REVIEW_NOTION_DATABASE_ID:  ${{secrets.REVIEW_NOTION_DATABASE_ID}}
        REVIEW_IMAGES_TABLE: ${{secrets.REVIEW_IMAGES_TABLE}}
        REVIEW_IMAGE_OPENAI_ASSISTANT: ${{secrets.REVIEW_IMAGE_OPENAI_ASSISTANT}}
        REVIEW_TEXT_TABLE: ${{secrets.REVIEW_TEXT_TABLE}}
        REVIEW_TEXT_OPENAI_ASSISTANT: ${{secrets.REVIEW_TEXT_OPENAI_ASSISTANT}}

    - name: compress project
      run: zip -r bas_scripts.zip .

    - name: Transfer files to Droplet using rsync
      uses: burnett01/rsync-deployments@5.0
      with:
        switches: -avzr --delete
        path: bas_scripts.zip
        remote_path: /root/app
        remote_host: ${{ secrets.DO_DROPLET_IP }}
        remote_user: root
        remote_key: ${{ secrets.DO_SSH_KEY }}

    - name: Deploy to DigitalOcean Droplet
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.DO_DROPLET_IP }}
        username: root
        key: ${{ secrets.DO_SSH_KEY }}
        script: |
          cd /root/app
          unzip -o bas_scripts.zip
          docker-compose up -d --force-recreate
